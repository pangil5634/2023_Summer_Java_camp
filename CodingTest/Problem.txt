# Coding Test 1-01 - 다양한 조건 판정

3개의 정수를 입력받아 이 숫자들에 대해서 다음 조건 중에 만족시키는 번호들을 모두 출력하라. 

1번. 3개의 숫자 중 적어도 두 수의 값이 같다. 

2번. 3개의 숫자 중 적어도 두 수의 크기가 모두 50 보다 크다. 

3번. 3개의 숫자 중 어떤 두 수의 합이 나머지 하나의 숫자와 같다. 

4번. 3개의 숫자 중 어떤 하나의 수로 다른 두 수를 나누면 나누어떨어지는 경우가 있다. 변수는 다음과 같이 사용하라. 

int num1, num2, num3; // 첫 번째 숫자, 두 번째 숫자, 세 번째 숫자


실행 예시
```
Enter first number 10
Enter second number 20
Enter third number 30
Satisfies the third condition
Satisfies the fourth condition
```

```
Enter first number 50
Enter second number 100
Enter third number 200
Satisfies the second condition
Satisfies the fourth condition
```

```
Enter first number 10
Enter second number 10
Enter third number 20
Satisfies the first condition
Satisfies the third condition
Satisfies the fourth condition
```

------------------------------------------------------------------------------------------------

# Coding Test A02 - 아파트 평 계산 및 종류 판단

아파트의 분양 면적을 제곱미터(m2) 단위로 입력받아 이 값을 평형 단위의 값으로 변환하라. 그리고 평형 수에 따라 아파트의 종류가 작은 아파트인지 큰 아파트인지 판정하여 판정 결과를 출력하라. 단, 평형 수 = 제곱미터 / 3.305 로 계산하고, 30평 미만이면 작은 아파트 30평 이상이면 큰 아파트로 판정한다. 변수는 다음과 같이 사용하라. 

double m2_area; //면적 (제곱미터) 

double pyung_area; // 면적 (평수)


실행 예시
```
Enter area of Apartment(m^2) > 85.5
Area of Apartment(평수) 25.9
It is small apartment
```
```
Enter area of Apartment(m^2) > 120.5
Area of Apartment(평수) 36.5
It is big apartment
```

------------------------------------------------------------------------------------------------

# Coding Test A03 - 사칙연산
 
숫자 2개와 하나의 연산기호문자('+', '-', '*', '/' 중 1개)를 입력받은 후, 첫 번째 숫자와 두 번째 숫자 사이에 연산기호를 넣은 계산식의 결과 값을 계산하여 출력하라. 

변수는 다음과 같이 사용하라. 

int num1, num2; //첫 번째 숫자, 두 번째 숫자 

String operator; // 연산기호문자('+', '-', '*', '/' 중 1개) 

int result; // 연산 결과 

```
Enter number1 > 100
Enter number2 > 200
Enter a math symbol('+', '-', '*', '/') +
Result is 300
```

```
Enter number1 > 100
Enter number2 > 7
Enter a math symbol('+', '-', '*', '/') *
Result is 700
```

```
Enter number1 > 500
Enter number2 > 100
Enter a math symbol('+', '-', '*', '/') -
Result is 400
```

```
Enter number1 > 700
Enter number2 > 7
Enter a math symbol('+', '-', '*', '/') /
Result is 100
```

------------------------------------------------------------------------------------------------

# A04 - 구구단 출력

2부터 9 사이의 숫자를 입력받아 이 숫자에 해당하는 구구단을 출력하라. 단, 2부터 9 사이의 숫자가 아닌 수를 입력하면 "Invalid input" 라고 출력하고 바르게 입력할 때까지 다시 입력을 받도록 하라. 

반복문은 적당하게 선택하고, 변수는 다음과 같이 사용하라. 

int dan; // 출력하려는 구구단의 단 수 

int i; // 반복문을 위한 변수 

실행 예시
```
Enter number of gugudan(2~9) > 1
Invalid input
Enter number of gugudan(2~9) > 10
Invalid input
Enter number of gugudan(2~9) > 7
7 X 1 = 7
7 X 2 = 14
7 X 3 = 21
7 X 4 = 28
7 X 5 = 35
7 X 6 = 42
7 X 7 = 49
7 X 8 = 56
7 X 9 = 63
```

------------------------------------------------------------------------------------------------

# Coding Test A05 - 알람 시계

## 문제
상근이는 매일 아침 알람을 듣고 일어난다. 알람을 듣고 바로 일어나면 다행이겠지만, 항상 조금만 더 자려는 마음 때문에 매일 학교를 지각하고 있다.

상근이는 모든 방법을 동원해보았지만, 조금만 더 자려는 마음은 그 어떤 것도 없앨 수가 없었다.

이런 상근이를 불쌍하게 보던, 창영이는 자신이 사용하는 방법을 추천해 주었다.

바로 "45분 일찍 알람 설정하기"이다.

이 방법은 단순하다. 원래 설정되어 있는 알람을 45분 앞서는 시간으로 바꾸는 것이다. 어차피 알람 소리를 들으면, 알람을 끄고 조금 더 잘 것이기 때문이다. 이 방법을 사용하면, 매일 아침 더 잤다는 기분을 느낄 수 있고, 학교도 지각하지 않게 된다.

현재 상근이가 설정한 알람 시각이 주어졌을 때, 창영이의 방법을 사용한다면, 이를 언제로 고쳐야 하는지 구하는 프로그램을 작성하시오.

## 입력
첫째 줄에 두 정수 H와 M이 주어진다. (0 ≤ H ≤ 23, 0 ≤ M ≤ 59) 그리고 이것은 현재 상근이가 설정한 놓은 알람 시간 H시 M분을 의미한다.

입력 시간은 24시간 표현을 사용한다. 24시간 표현에서 하루의 시작은 0:0(자정)이고, 끝은 23:59(다음날 자정 1분 전)이다. 시간을 나타낼 때, 불필요한 0은 사용하지 않는다.

## 출력
첫째 줄에 상근이가 창영이의 방법을 사용할 때, 설정해야 하는 알람 시간을 출력한다. (입력과 같은 형태로 출력하면 된다.)

------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------

# Coding Test B01 - 홀수단 또는 짝수단의 구구단의 열의 개수를 맞추어 출력하기

출력모드(홀수 또는 짝수)와 열 갯수를 입력받아 이에 따라 홀수 단 또는 짝수 단의 구구단만을 1줄에 열 개수만큼씩 출력하라. 

단, 출력모드 입력 내용이 1이면 홀수단, 2이면 짝수단으로 결정하도록 한다. 

변수는 다음과 같이 사용하라. 

int mode; // 출력모드(1: 홀수단, 2: 짝수단) 

int column; // 열 개수 

int i, j; // 반복문 사용을 위한 변수 

```
Enter a type of gugudan (1: odd, 2: even) > 1
Enter a numbers of column > 4
3 X 1 = 3       3 X 2 = 6       3 X 3 = 9       3 X 4 = 12
3 X 5 = 15      3 X 6 = 18      3 X 7 = 21      3 X 8 = 24
3 X 9 = 27

5 X 1 = 5       5 X 2 = 10      5 X 3 = 15      5 X 4 = 20
5 X 5 = 25      5 X 6 = 30      5 X 7 = 35      5 X 8 = 40
5 X 9 = 45

7 X 1 = 7       7 X 2 = 14      7 X 3 = 21      7 X 4 = 28
7 X 5 = 35      7 X 6 = 42      7 X 7 = 49      7 X 8 = 56
7 X 9 = 63

9 X 1 = 9       9 X 2 = 18      9 X 3 = 27      9 X 4 = 36
9 X 5 = 45      9 X 6 = 54      9 X 7 = 63      9 X 8 = 72
9 X 9 = 81
```

------------------------------------------------------------------------------------------------

# Coding Test B03 - 점수 계산

학생 5명의 국어, 영어, 수학 점수를 각각 입력받아 저장한 후에, 다음 항목들을 계산하여 출력하라. 

1) 각 과목별 총점과 평균 점수

2) 각 학생별 총점과 평균점수, 평균에 따른 등급

등급은 다음과 같은 기준으로 결정하라.
```
평균 90이상 : A
평균 80이상 ~ 90미만 : B
평균 70이상 ~ 80미만 : C
평균 60이상 ~ 70미만 : D
평균 60미만 : F
```

변수는 다음과 같이 사용하라.
```
int[][] jumsu = new int[5][3];  // 3과목 점수, 총점을 저장하고 있는 중복 리스트
int[] c_average = new int[3]; // 3과목 총점을 저장하고 있는 중복 리스트
String[] class_name = {"국어","영어","수학"}; // 과목명 리스트
int kor, eng, mat; // 3과목 점수 입력을 위한 변수
int sum, average, grade; // 총점, 평균, 등급 계산을 위한 변수
i, j // 반복문을 위한 변수

```

실행 예)

```
Enter Korean, English, Math score of 1th student > 85 95 75
Enter Korean, English, Math score of 2th student > 90 80 70
Enter Korean, English, Math score of 3th student > 65 85 75
Enter Korean, English, Math score of 4th student > 60 70 80
Enter Korean, English, Math score of 5th student > 60 50 60

1) Total score and average for each subjects
Total Korean score is 360, average is 72.0
Total English score is 380, average is 76.0
Total Math score is 360, average is 72.0

2) Total score and average for each students
1th student score: Total - 255, average - 85.0, grade - B
2th student score: Total - 240, average - 80.0, grade - B
3th student score: Total - 225, average - 75.0, grade - C
4th student score: Total - 210, average - 70.0, grade - C
5th student score: Total - 170, average - 56.7, grade - F
```

------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------
