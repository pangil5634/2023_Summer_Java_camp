# Coding Test 1-01 - 다양한 조건 판정

3개의 정수를 입력받아 이 숫자들에 대해서 다음 조건 중에 만족시키는 번호들을 모두 출력하라. 

1번. 3개의 숫자 중 적어도 두 수의 값이 같다. 

2번. 3개의 숫자 중 적어도 두 수의 크기가 모두 50 보다 크다. 

3번. 3개의 숫자 중 어떤 두 수의 합이 나머지 하나의 숫자와 같다. 

4번. 3개의 숫자 중 어떤 하나의 수로 다른 두 수를 나누면 나누어떨어지는 경우가 있다. 변수는 다음과 같이 사용하라. 

int num1, num2, num3; // 첫 번째 숫자, 두 번째 숫자, 세 번째 숫자


실행 예시
```
Enter first number 10
Enter second number 20
Enter third number 30
Satisfies the third condition
Satisfies the fourth condition
```

```
Enter first number 50
Enter second number 100
Enter third number 200
Satisfies the second condition
Satisfies the fourth condition
```

```
Enter first number 10
Enter second number 10
Enter third number 20
Satisfies the first condition
Satisfies the third condition
Satisfies the fourth condition
```

------------------------------------------------------------------------------------------------

# Coding Test A02 - 아파트 평 계산 및 종류 판단

아파트의 분양 면적을 제곱미터(m2) 단위로 입력받아 이 값을 평형 단위의 값으로 변환하라. 그리고 평형 수에 따라 아파트의 종류가 작은 아파트인지 큰 아파트인지 판정하여 판정 결과를 출력하라. 단, 평형 수 = 제곱미터 / 3.305 로 계산하고, 30평 미만이면 작은 아파트 30평 이상이면 큰 아파트로 판정한다. 변수는 다음과 같이 사용하라. 

double m2_area; //면적 (제곱미터) 

double pyung_area; // 면적 (평수)


실행 예시
```
Enter area of Apartment(m^2) > 85.5
Area of Apartment(평수) 25.9
It is small apartment
```
```
Enter area of Apartment(m^2) > 120.5
Area of Apartment(평수) 36.5
It is big apartment
```

------------------------------------------------------------------------------------------------

# Coding Test A03 - 사칙연산
 
숫자 2개와 하나의 연산기호문자('+', '-', '*', '/' 중 1개)를 입력받은 후, 첫 번째 숫자와 두 번째 숫자 사이에 연산기호를 넣은 계산식의 결과 값을 계산하여 출력하라. 

변수는 다음과 같이 사용하라. 

int num1, num2; //첫 번째 숫자, 두 번째 숫자 

String operator; // 연산기호문자('+', '-', '*', '/' 중 1개) 

int result; // 연산 결과 

```
Enter number1 > 100
Enter number2 > 200
Enter a math symbol('+', '-', '*', '/') +
Result is 300
```

```
Enter number1 > 100
Enter number2 > 7
Enter a math symbol('+', '-', '*', '/') *
Result is 700
```

```
Enter number1 > 500
Enter number2 > 100
Enter a math symbol('+', '-', '*', '/') -
Result is 400
```

```
Enter number1 > 700
Enter number2 > 7
Enter a math symbol('+', '-', '*', '/') /
Result is 100
```

------------------------------------------------------------------------------------------------

# A04 - 구구단 출력

2부터 9 사이의 숫자를 입력받아 이 숫자에 해당하는 구구단을 출력하라. 단, 2부터 9 사이의 숫자가 아닌 수를 입력하면 "Invalid input" 라고 출력하고 바르게 입력할 때까지 다시 입력을 받도록 하라. 

반복문은 적당하게 선택하고, 변수는 다음과 같이 사용하라. 

int dan; // 출력하려는 구구단의 단 수 

int i; // 반복문을 위한 변수 

실행 예시
```
Enter number of gugudan(2~9) > 1
Invalid input
Enter number of gugudan(2~9) > 10
Invalid input
Enter number of gugudan(2~9) > 7
7 X 1 = 7
7 X 2 = 14
7 X 3 = 21
7 X 4 = 28
7 X 5 = 35
7 X 6 = 42
7 X 7 = 49
7 X 8 = 56
7 X 9 = 63
```

------------------------------------------------------------------------------------------------

# Coding Test A05 - 알람 시계

## 문제
상근이는 매일 아침 알람을 듣고 일어난다. 알람을 듣고 바로 일어나면 다행이겠지만, 항상 조금만 더 자려는 마음 때문에 매일 학교를 지각하고 있다.

상근이는 모든 방법을 동원해보았지만, 조금만 더 자려는 마음은 그 어떤 것도 없앨 수가 없었다.

이런 상근이를 불쌍하게 보던, 창영이는 자신이 사용하는 방법을 추천해 주었다.

바로 "45분 일찍 알람 설정하기"이다.

이 방법은 단순하다. 원래 설정되어 있는 알람을 45분 앞서는 시간으로 바꾸는 것이다. 어차피 알람 소리를 들으면, 알람을 끄고 조금 더 잘 것이기 때문이다. 이 방법을 사용하면, 매일 아침 더 잤다는 기분을 느낄 수 있고, 학교도 지각하지 않게 된다.

현재 상근이가 설정한 알람 시각이 주어졌을 때, 창영이의 방법을 사용한다면, 이를 언제로 고쳐야 하는지 구하는 프로그램을 작성하시오.

## 입력
첫째 줄에 두 정수 H와 M이 주어진다. (0 ≤ H ≤ 23, 0 ≤ M ≤ 59) 그리고 이것은 현재 상근이가 설정한 놓은 알람 시간 H시 M분을 의미한다.

입력 시간은 24시간 표현을 사용한다. 24시간 표현에서 하루의 시작은 0:0(자정)이고, 끝은 23:59(다음날 자정 1분 전)이다. 시간을 나타낼 때, 불필요한 0은 사용하지 않는다.

## 출력
첫째 줄에 상근이가 창영이의 방법을 사용할 때, 설정해야 하는 알람 시간을 출력한다. (입력과 같은 형태로 출력하면 된다.)

------------------------------------------------------------------------------------------------
