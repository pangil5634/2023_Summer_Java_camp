# D01 - 1부터 더하기

숫자를 입력받은 후, 이 숫자가 1보다 큰 경우 1부터 이 숫자까지의 모든 정수를 더한 값을 출력하라. 단, 입력한 숫자가 1 이하이면 "Invalid input"이라고 출력한다. 

반복은 for 구문을 사용하고, 변수는 다음과 같이 사용하라. 

int number; // 입력받은 수 

int totalsum; // 1부터 더한 계산 결과 값 

int i; // 반복문 사용을 위한 변수 

실행 예시
```
Enter a number > 100
The sum of all integer from 1 to the number entered is 5050
```

```
Enter a number > 1
Invalid input
```

```
Enter a number > 500
The sum of all integer from 1 to the number entered is 125250
```

------------------------------------------------------------------------------------------------

# D02 - 입력 받은 숫자 중 가장 큰 수 가장 작은 수 구하기

반복해서 0부터 100 사이의 숫자를 입력받아서 지금까지 입력된 숫자들 중 가장 큰 수와 가장 작은 수가 무엇인지 출력하라. 0부터 100 사이의 숫자가 아닌 수가 입력되면 반복문이 중단되도록 하라. 

반복은 while 구문을 사용하고, 변수는 다음과 같이 사용하라. 

int number; // 입력받은 수 

int max_num, min_num; // 가장 큰 숫자, 가장 작은 숫자 

실행 예시
```
Enter a number > 55
Enter a number > 22
Enter a number > 11
Enter a number > 99
Enter a number > 5
Enter a number > 66
Enter a number > 999
Max number is 99, Min number is 5
```

------------------------------------------------------------------------------------------------

# D03- 입력 받은 숫자들의 총합계, 평균 구하기
반복해서 0부터 100 사이의 숫자를 입력받아서 지금까지 입력된 숫자들이 모두 몇 개이며, 이 숫자들의 총 합계와 평균 값을 계산하여 출력하라. 0부터 100 사이의 숫자가 아닌 수가 입력되면 반복문이 중단되도록 하라. 

반복은 while 구문을 사용하고, 변수는 다음과 같이 사용하라. 

int number; // 입력받은 수 

int count=0; // 입력받은 숫자의 개수 

int totalsum; // 총합계 

double average; // 평균 값 

실행 예시
```
Enter a number from 0 to 100 > 10
Enter a number from 0 to 100 > 50
Enter a number from 0 to 100 > 64
Enter a number from 0 to 100 > 2
Enter a number from 0 to 100 > 13
Enter a number from 0 to 100 > 97
Enter a number from 0 to 100 > 88
Enter a number from 0 to 100 > 12
Enter a number from 0 to 100 > 35
Enter a number from 0 to 100 > 50
Enter a number from 0 to 100 > 999
The sum of 10 numbers is 421, average is 42.1
```

------------------------------------------------------------------------------------------------

# D04 - 미성년자 숫자세기

가족이 몇 명인지 입력받은 후, 그 인원 수 만큼 태어난 년도를 입력받으면서, 나이를 계산하여 미성년자가 모두 몇 명인지 출력하라. 단, 나이 = 2021 – 태어난 년도 + 1 로 계산하고 나이가 20세 미만인 경우, 미성년자로 판정한다. 

반복은 for 구문을 사용하고, 변수는 다음과 같이 사용하라. 

int count_all; // 가족 인원수 

int count_young; // 미성년자의 수 

int birth_year; // 태어난 년도 

int age; // 나이 

int i; // 반복문을 위한 변수 

실행 예시
```
Enter number of family members > 5
Enter a birth year > 1955
Enter a birth year > 1960
Enter a birth year > 1975
Enter a birth year > 1990
Enter a birth year > 2004
There are 1 youngs in the family.
```

------------------------------------------------------------------------------------------------

# D05 - 직사각형 형태 개수 세기

반복해서 직사각형의 가로크기와 세로크기를 입력받으면서 이 값을 이용하여 직사각형의 모양을 판정하여 각각의 종류별로 몇 개가 입력되었는지 결과를 출력하라. 가로 크기와 세로 크기 중 하나라도 0이하의 값이 입력되면 반복을 중단한다. 

단, 평가 기준은 다음과 같다. 

가로 크기와 세로크기가 동일 : "정사각형" 

가로 크기가 세로크기의 2배 이상 : "좌우로 길쭉한 직사각형" 

세로 크기가 가로크기의 2배 이상 : "위아래로 길쭉한 직사각형" 

가로 크기가 세로크기보다 크면 : "일반적인 가로형 직사각형" 

세로 크기가 가로크기보다 크면 : "일반적인 세로형 직사각형" 

반복은 while 구문을 사용하고, 변수는 다음과 같이 사용하라. 

int width, height; // 가로크기, 세로크기 

int count1; // "정사각형"의 개수 

int count2; // "좌우로 길쭉한 직사각형"의 개수 

int count3; // "위아래로 길쭉한 직사각형"의 개수 

int count4; // "일반적인 가로형 직사각형"의 개수 

int count5; // "일반적인 세로형 직사각형"의 개수 

실행 예시
```
Enter width, height of Rectangle > 10 10
Enter width, height of Rectangle > 10 50
Enter width, height of Rectangle > 20 100
Enter width, height of Rectangle > 50 50
Enter width, height of Rectangle > 40 30
Enter width, height of Rectangle > 60 70
Enter width, height of Rectangle > 70 80
Enter width, height of Rectangle > 100 20
Enter width, height of Rectangle > 200 50
Enter width, height of Rectangle > 30 30
Enter width, height of Rectangle > -1 -1
Count of square is 3
Count of an oblong rectangle from side to side is 2
Count of an oblong rectangle from top to bottom is 2
Count of a horizontal rectangle is 1
Count of a vertical rectangle is 2
```

------------------------------------------------------------------------------------------------

# D06 - 아파트 평형 계산 및 종류 판정

아파트 10채의 분양 면적을 제곱미터(m2) 단위로 입력받아 이 값을 평형 단위의 값으로 변환하여 평형 수 에 따라 아파트의 종류를 구분하여 종류별로 개수를 센 후, 그 결과를 출력하라. 

단, 평형 수 = 제곱미터 / 3.305 로 계산하고, 크기에 따른 아파트 종류는 다음과 같이 판정한다. 

15평 미만 : 소형 

15평 이상 ~ 30평 미만 : 중소형 

30평 이상 ~ 50평 미만 : 중형 

50평 이상 : 대형 

반복문은 for 구문을 사용하고, 변수는 다음과 같이 사용하라. 

double m2_area; // 면적 (제곱미터) 

double pyung_area; // 면적 (평수) 

int count1; // 소형 아파트 개수 

int count2; // 중소형 아파트 개수 

int count3; // 중형 아파트 개수 

int count4; // 대형 아파트 개수 

int i; // 반복문을 위한 변수 

실행 예시

```
Enter area of Apartment(m^2) > 85.5
Area of Apartment(pyung) 25.9
Enter area of Apartment(m^2) > 120.4
Area of Apartment(pyung) 36.4
Enter area of Apartment(m^2) > 200.0
Area of Apartment(pyung) 60.5
Enter area of Apartment(m^2) > 40.5
Area of Apartment(pyung) 12.3
Enter area of Apartment(m^2) > 55
Area of Apartment(pyung) 16.6
Enter area of Apartment(m^2) > 155
Area of Apartment(pyung) 46.9
Enter area of Apartment(m^2) > 77.7
Area of Apartment(pyung) 23.5
Enter area of Apartment(m^2) > 99.9
Area of Apartment(pyung) 30.2
Enter area of Apartment(m^2) > 65.0
Area of Apartment(pyung) 19.7
Enter area of Apartment(m^2) > 250.1
Area of Apartment(pyung) 75.7
Count of small-sized apartment is 1
Count of small and medium-sized apartment is 4
Count of medium-sized apartment is 3
Count of big-sized apartment is 2
```



------------------------------------------------------------------------------------------------

# D07 - 1차 함수의 좌표 구하기

1차 함수 y=ax + b 에 대해 계수 a와 b를 입력받은 후, x값의 시작 값과 마지막 값을 입력받아 이 두 수 사이의 x 값에 대한 1차 함수의 (x, y) 좌표들을 출력하라. 

반복문은 for 구문을 사용하고, 변수는 다음과 같이 사용하라. 

int a, b; // 1차 함수의 계수 a, b 

int x_begin, x_end; // x좌표의 시작 값과 끝 값 

int x, y; // x좌표, y좌표 

실행 예시
```
Enter the coefficients a and b of linear function(y=ax+b) > 2 5
Enter the start and end values of x coordinates > 1 10
coordinates (1, 7)
coordinates (2, 9)
coordinates (3, 11)
coordinates (4, 13)
coordinates (5, 15)
coordinates (6, 17)
coordinates (7, 19)
coordinates (8, 21)
coordinates (9, 23)
coordinates (10, 25)
```

------------------------------------------------------------------------------------------------

# D08 - 2차 함수의 좌표 구하기

2차 함수 y=ax2 + bx + c 에 대해 계수 a와 b와 c를 입력받은 후, x값의 시작 값과 마지막 값을 입력 받아 이 두 수 사이의 x값에 대한 2차 함수의 (x, y) 좌표들을 출력하라. 

반복문은 for 구문을 사용하고, 변수는 다음과 같이 사용하라. 

int a, b, c; // 2차 함수의 계수 a, b, c 

int x_begin, x_end; // x좌표의 시작 값과 끝 값 

int x, y; // x좌표, y좌표 

실행 예시
```
Enter the coefficients a and b of quadratic function(y=ax^2+bx+c) > 1 4 4
Enter the start and end values of x coordinates > 1 10
coordinates (1, 9)
coordinates (2, 16)
coordinates (3, 25)
coordinates (4, 36)
coordinates (5, 49)
coordinates (6, 64)
coordinates (7, 81)
coordinates (8, 100)
coordinates (9, 121)
coordinates (10, 144)
```

------------------------------------------------------------------------------------------------

# D09 - 구구단 출력

2부터 9 사이의 숫자를 입력받아 이 숫자에 해당하는 구구단을 출력하라. 단, 2부터 9 사이의 숫자가 아닌 수를 입력하면 "Invalid input" 라고 출력하고 바르게 입력할 때까지 다시 입력을 받도록 하라. 

반복문은 적당하게 선택하고, 변수는 다음과 같이 사용하라. 

int dan; // 출력하려는 구구단의 단 수 

int i; // 반복문을 위한 변수 

실행 예시
```
Enter number of gugudan(2~9) > 1
Invalid input
Enter number of gugudan(2~9) > 10
Invalid input
Enter number of gugudan(2~9) > 7
7 X 1 = 7
7 X 2 = 14
7 X 3 = 21
7 X 4 = 28
7 X 5 = 35
7 X 6 = 42
7 X 7 = 49
7 X 8 = 56
7 X 9 = 63
```

------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------
