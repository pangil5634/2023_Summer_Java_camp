# G01 - 나이 계산 및 연령대 판정

최대 100명까지 사람들의 태어난 년도를 입력받아 나이를 계산한 후, 그 값을 저장하되, 2021보다 큰 년 도가 입력되기 전까지 태어난 년도를 반복하여 입력받도록 하라. 반복이 끝나면 지금까지 입력된 사람들의 나이를 모두 출력하고, 각자의 나이에 따라 유아, 어린이, 청소년, 청년, 중년, 노년 여부를 판정하여 이 중 에 유아, 어린이, 청소년, 청년, 중년, 노년이 각각 몇 명인지 출력하라. 

단, 나이 = 2021 – 태어난 년도 + 1 로 계산하고 연령대 구분은 다음과 같이 판정한다. 

```
7세 미만 : 유아, 
7세 이상 ~ 13세미만 : 어린이, 
13세 이상 ~ 20세 미만 : 청소년, 
20세 이상 ~ 30세 미만 : 청년,
30세 이상 ~ 60세 미만 : 중년,
60세 이상 : 노년 
```
  

변수는 다음과 같이 사용하라.

int birth_year; // 입력받은 태어난 년도 

int[] age = new int[100]; // 각 사람들의 나이 (최대 100명) 

int count_person; // 입력된 인원 수 int count_baby; // 유아 수 

int count_child; // 어린이 수 

int count_youth; // 청소년 수 

int count_young; // 청년 수 

int count_adult; // 중년 수 

int count_old; // 노년 수 

int i ; // 반복문을 위한 변수

```
Enter a birth year of 1th person > 1989
Enter a birth year of 2th person > 1999
Enter a birth year of 3th person > 2002
Enter a birth year of 4th person > 1976
Enter a birth year of 5th person > 1950
Enter a birth year of 6th person > 1930
Enter a birth year of 7th person > 1945
Enter a birth year of 8th person > 1962
Enter a birth year of 9th person > 1974
Enter a birth year of 10th person > 2222

1th person are 35 years old.
2th person are 25 years old.
3th person are 22 years old.
4th person are 48 years old.
5th person are 74 years old.
6th person are 94 years old.
7th person are 79 years old.
8th person are 62 years old.
9th person are 50 years old.

There are 0 babys.
There are 0 childs.
There are 0 youths.
There are 2 youngs.
There are 3 adults.
There are 4 olds.
```

------------------------------------------------------------------------------------------------

# G02 - 물의 온도 구간 판정

물의 온도를 10회 입력받은 후, 이 물이 각각 어느 정도의 온수인지 판정하여 그 결과를 출력하라. 출력할 내용은 입력된 10개의 온도 값, 냉수 입력 횟수, 미온수 입력 횟수, 온수 입력 횟수, 끓는 물 입력 횟수를 각각 출력하라. 

단, 온수의 판정 구간은 다음과 같이 판정한다. 
```
음수 값 (0미만) : 잘못입력
0도 ~ 25도 미만 : 냉수
25도 ~ 40도 미만 : 미온수
40도 ~ 80도 미만 : 온수
80도 이상 : 끓는 물
```

변수는 다음과 같이 사용하라.

int input_degree; // 입력받은 온도

double[] degrees = new double[10] // 온도 리스트

String[] degree_name = {"냉수", "미온수", "온수", "끓는물"};

int[] count = {0,0,0,0}; // 입력 횟수 목록 (순서대로 냉수 입력 횟수, 미온수 입력 횟수, 온수 입력 횟수, 끓는 물 입력 횟수)

int i; // 반복문을 위한 변수

int sel; // 온도 판정 번호 (0,1,2,3)


```
Enter water temperature > 10.5
Enter water temperature > 25.1
Enter water temperature > 88.4
Enter water temperature > 45.0
Enter water temperature > 30.5
Enter water temperature > 15.7
Enter water temperature > 46.7
Enter water temperature > 85.0
Enter water temperature > 68.0
Enter water temperature > 0.5

1th water temperature is 10.5 cold water
2th water temperature is 25.1 warm water
3th water temperature is 88.4 boiling water
4th water temperature is 45.0 hot water
5th water temperature is 30.5 warm water
6th water temperature is 15.7 cold water
7th water temperature is 46.7 hot water
8th water temperature is 85.0 boiling water
9th water temperature is 68.0 hot water
10th water temperature is 0.5 cold water

Count of cold water is 3
Count of warm water is 2
Count of hot water is 3
Count of boiling water is 2
```

------------------------------------------------------------------------------------------------

# G03 - 점수 계산

학생 5명의 국어, 영어, 수학 점수를 각각 입력받아 저장한 후에, 다음 항목들을 계산하여 출력하라. 

1) 각 과목별 총점과 평균 점수

2) 각 학생별 총점과 평균점수, 평균에 따른 등급

등급은 다음과 같은 기준으로 결정하라.
```
평균 90이상 : A
평균 80이상 ~ 90미만 : B
평균 70이상 ~ 80미만 : C
평균 60이상 ~ 70미만 : D
평균 60미만 : F
```

변수는 다음과 같이 사용하라.
```
int[][] jumsu = new int[5][3];  // 3과목 점수, 총점을 저장하고 있는 중복 리스트
int[] c_average = new int[3]; // 3과목 총점을 저장하고 있는 중복 리스트
String[] class_name = {"국어","영어","수학"}; // 과목명 리스트
int kor, eng, mat; // 3과목 점수 입력을 위한 변수
int sum, average, grade; // 총점, 평균, 등급 계산을 위한 변수
i, j // 반복문을 위한 변수

```

실행 예)

```
Enter Korean, English, Math score of 1th student > 85 95 75
Enter Korean, English, Math score of 2th student > 90 80 70
Enter Korean, English, Math score of 3th student > 65 85 75
Enter Korean, English, Math score of 4th student > 60 70 80
Enter Korean, English, Math score of 5th student > 60 50 60

1) Total score and average for each subjects
Total Korean score is 360, average is 72.0
Total English score is 380, average is 76.0
Total Math score is 360, average is 72.0

2) Total score and average for each students
1th student score: Total - 255, average - 85.0, grade - B
2th student score: Total - 240, average - 80.0, grade - B
3th student score: Total - 225, average - 75.0, grade - C
4th student score: Total - 210, average - 70.0, grade - C
5th student score: Total - 170, average - 56.7, grade - F
```

------------------------------------------------------------------------------------------------

# G04 - 부동산 중개 수수료 계산기

부동산 거래종류(1:매매, 2:임대, 0:계산종료)와 거래금액을 입력받은 후에 이에 대한 중개 수수료를 계산 하여 출력하라. 입력과 출력을 계속 반복하되 계산종료(0)를 입력하면 반복을 중단하고 지금까지의 수수료 총액을 출력하라.

중개 수수료 계산 방법은 아래 표를 참고하라. 

거래종류 : 매매

    거래금액 : 5천만원 미만 / 수수료비율 : 0.6% / 상한금액 :  250,000
    거래금액 : 5천만원 이상 / 수수료비율 : ~ 2억원 미만 / 상한금액 : 0.5% 800,000
    거래금액 : 2억원 이상 / 수수료비율 : 0.4% / 상한금액 :  없음

거래종류 : 임대

    거래금액 : 2천만원 미만 / 수수료비율 : 0.5% / 상한금액 : 70,000
    거래금액 : 2천만원 이상 ~ 5천만원 미만 / 수수료비율 : 0.5% / 상한금액 : 200,000
    거래금액 : 5천만원 이상 ~ 1억원 미만 / 수수료비율 : 0.4% / 상한금액 : 300,000
    거래금액 : 1억원 이상 / 수수료비율 : 0.3% / 상한금액 : 없음

변수는 다음과 같이 사용하라.

int kind; // 거래종류(1:매매, 2:임대, 0:계산종료)

int money; // 거래금액

int charge; // 중개 수수료

int total_charge; // 수수료 총액

실행 예)

```
Enter the type of real estate transaction(1:Trading, 2:Lease, 0:exit) > 1
Enter the amount of real estate transaction. > 48000000
The charge is 250000

Enter the type of real estate transaction(1:Trading, 2:Lease, 0:exit) > 1
Enter the amount of real estate transaction. > 70000000
The charge is 350000

Enter the type of real estate transaction(1:Trading, 2:Lease, 0:exit) > 1
Enter the amount of real estate transaction. > 250000000
The charge is 1000000

Enter the type of real estate transaction(1:Trading, 2:Lease, 0:exit) > 2
Enter the amount of real estate transaction. > 19000000
The charge is 70000

Enter the type of real estate transaction(1:Trading, 2:Lease, 0:exit) > 2
Enter the amount of real estate transaction. > 48000000
The charge is 200000

Enter the type of real estate transaction(1:Trading, 2:Lease, 0:exit) > 2
Enter the amount of real estate transaction. > 70000000
The charge is 280000

Enter the type of real estate transaction(1:Trading, 2:Lease, 0:exit) > 2
Enter the amount of real estate transaction. > 19000000
The charge is 70000

Enter the type of real estate transaction(1:Trading, 2:Lease, 0:exit) > 0
Total charge is 2220000
```

------------------------------------------------------------------------------------------------

# G05 - PC방 이용료 계산기

PC방 이용료를 계산하는 프로그램을 작성하라. 사용한 시간(시간, 분)을 입력받은 후 이에 따른 이용료를 화면에 출력하는 것을 반복한다. 시간과 분이 모두 0으로 입력되면 계산을 마치고 지금까지의 이용료 총금액을 출력하라. 

단, 이용료는 매 30분 당 1,000원씩으로 계산하며, 다음과 같이 시간에 따라 할인혜택을 적용한다. 

1) 2시간 이상 3시간 미만 이용자는 비용의 5%를 할인받는다. 

2) 3시간 이상 5시간 미만 이용자는 비용의 10%를 할인받는다. 

3) 5시간 이상 이용자는 비용의 20%를 할인받는다. 

예) 이용시간이 4시간 20분이면 정상금액 9,000원에서 10% 할인을 받아 이용료는 8,100원이 된다.

변수는 다음과 같이 사용한다.

int hour, minute; // 이용한 시간, 분

int charge; // 이용료

int total_charge; // 이용료 총액

실행 예)

```
Enter hours and minutes of use > 1 20
Your charge is 3000

Enter hours and minutes of use > 2 40
Your charge is 5700

Enter hours and minutes of use > 4 20
Your charge is 8100

Enter hours and minutes of use > 6 0
Your charge is 9600

Enter hours and minutes of use > 3 30
Your charge is 6300

Enter hours and minutes of use > 1 50
Your charge is 4000

Enter hours and minutes of use > 0 50
Your charge is 2000

Enter hours and minutes of use > 3 40
Your charge is 7200

Enter hours and minutes of use > 2 10
Your charge is 4750

Enter hours and minutes of use > 2 59
Your charge is 5700

Enter hours and minutes of use > 0 0
Your total charge is 56350
```



------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------


